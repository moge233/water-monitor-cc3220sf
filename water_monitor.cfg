var Task = xdc.useModule('ti.sysbios.knl.Task');
var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Clock = xdc.useModule('ti.sysbios.knl.Clock');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var Event = xdc.useModule('ti.sysbios.knl.Event');
Clock.timerId = 0;
Program.heap = 4096;
BIOS.heapTrackEnabled = true;
BIOS.libType = BIOS.LibType_Debug;
BIOS.customCCOpts = "--endian=little -mv7M4 --float_support=vfplib --abi=eabi -q -ms  --program_level_compile -g";
var task1Params = new Task.Params();
task1Params.instance.name = "UartTask";
task1Params.priority = 5;
task1Params.stackSize = 4096;
Program.global.UartTask = Task.create("&UartTaskFxn", task1Params);
var task3Params = new Task.Params();
task3Params.instance.name = "PhTask";
task3Params.priority = 3;
task3Params.stackSize = 4096;
Program.global.PhTask = Task.create("&PhTaskFxn", task3Params);
var task2Params = new Task.Params();
task2Params.instance.name = "TemperatureTask";
task2Params.priority = 3;
task2Params.stackSize = 4096;
Program.global.TemperatureTask = Task.create("&TemperatureTaskFxn", task2Params);
var semaphore0Params = new Semaphore.Params();
semaphore0Params.instance.name = "I2C_sem";
semaphore0Params.mode = Semaphore.Mode_BINARY;
Program.global.I2C_sem = Semaphore.create(null, semaphore0Params);
var event0Params = new Event.Params();
event0Params.instance.name = "ProbeReadingReady";
Program.global.ProbeReadingReady = Event.create(event0Params);
Program.stack = 4096;
BIOS.heapSize = 4096;
